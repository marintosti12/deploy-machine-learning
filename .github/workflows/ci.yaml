name: CI

on:
  push:
    branches: [ main, dev, test, "feature/*", "fix/*" ]
  pull_request:
    branches: [ main, dev, test ]

jobs:
  env:
    DATABASE_URL: ${{ secrets.DATABASE_URL }}
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    strategy:
      matrix:
        python-version: [ "3.12" ]

    steps:
      # RÃ©cuperation du code
      - name: Checkout
        uses: actions/checkout@v4

      # Configuration de python
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      # Installation de poetry
      - name: Install Poetry
        uses: abatilo/actions-poetry@v3
        with:
          poetry-version: "1.8.3"

      # Setup cache poety et env
      - name: Cache Poetry virtualenv
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/pypoetry
            .venv
          key: ${{ runner.os }}-poetry-${{ matrix.python-version }}-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-${{ matrix.python-version }}-


      # Install de poetry
      - name: Install deps (no dev)
        run: poetry install --no-interaction --no-ansi

      # Ruff est un linter et formateur de code Python
      - name: Lint (ruff)
        run: |
          poetry run python -m pip install ruff
          poetry run ruff check .

      # Test avec pytest
      - name: Tests (pytest + coverage)
        run: |
          poetry run python -m pip install pytest pytest-cov
          poetry run pytest -q --maxfail=1 --disable-warnings --cov=src --cov-report=term-missing
